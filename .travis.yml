dist: xenial
language: cpp

matrix:
  include:
    - compiler: gcc 4.9
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
      env: MYCC=gcc-4.9 MYCXX=g++-4.9
    - compiler: gcc 5
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env: MYCC=gcc-5 MYCXX=g++-5
    - compiler: gcc 6
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env: MYCC=gcc-6 MYCXX=g++-6
    - compiler: gcc 6 (code cov)
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - lcov
      env: MYCC=gcc-6 MYCXX=g++-6 CODE_COVERAGE=on
    - compiler: gcc 7
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env: MYCC=gcc-7 MYCXX=g++-7
    - compiler: gcc 8
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env: MYCC=gcc-8 MYCXX=g++-8
    - compiler: gcc 9
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
      env: MYCC=gcc-9 MYCXX=g++-9
    - compiler: clang 4
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial
          packages:
            - clang-4.0
      env: MYCC=clang-4.0 MYCXX=clang++-4.0
    - compiler: clang 5
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial
          packages:
            - clang-5.0
      env: MYCC=clang-5.0 MYCXX=clang++-5.0
    - compiler: clang 6
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-6.0
          packages:
            - clang-6.0
      env: MYCC=clang-6.0 MYCXX=clang++-6.0
    - compiler: clang 7
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-7
          packages:
            - clang-7
      env: MYCC=clang MYCXX=clang++
    - compiler: clang 8
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-8
          packages:
            - clang-8
      env: MYCC=clang MYCXX=clang++
    - compiler: clang 9
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-9
          packages:
            - clang-9
      env: MYCC=clang MYCXX=clang++
    - compiler: clang 6 (ASAN)
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-6.0
          packages:
            - clang-6.0
      env: MYCC=clang-6.0 MYCXX=clang++-6.0 ENABLE_ASAN=on
    - compiler: clang 6 (UBSAN)
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-6.0
          packages:
            - clang-6.0
      env: MYCC=clang-6.0 MYCXX=clang++-6.0 ENABLE_UBSAN=on
    - compiler: gcc
      addons:
        apt:
          packages:
            - g++-mingw-w64-x86-64
      env: MYCC=/usr/bin/x86_64-w64-mingw32-gcc MYCXX=/usr/bin/x86_64-w64-mingw32-g++
    - os: linux
      env:
        - TEST="Clang Format"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-6.0
          packages:
            - clang-format-6.0
            - clang-6.0
      script:
        - mkdir build
        - cd build
        - ADD_OPTS="-DCMAKE_C_COMPILER=clang-6.0 -DCMAKE_CXX_COMPILER=clang++-6.0"
        - ADD_OPTS="$ADD_OPTS -DCLANG_FORMAT=/usr/bin/clang-format-6.0"
        - cmake $ADD_OPTS ..
        - make format
        - |
          if [[ -n $(git diff) ]]; then
            echo "You must run make format before submitting a pull request"
            echo ""
            git diff
            exit -1
          fi
    - os: linux
      env:
        - TEST="Clang Tidy"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-6.0
          packages:
            - clang-tidy-6.0
            - clang-6.0
      script:
        - mkdir build
        - cd build
        - ADD_OPTS="-DCMAKE_C_COMPILER=clang-6.0 -DCMAKE_CXX_COMPILER=clang++-6.0"
        - cmake $ADD_OPTS ..
        - make tidy >output.txt
        - |
          if [[ -n $(grep "warning: " output.txt) ]] || [[ -n $(grep "error: " output.txt) ]]; then
              echo "You must pass the clang tidy checks before submitting a pull request"
              echo ""
              grep --color -E '^|warning: |error: ' output.txt
              exit -1;
          else
              echo -e "\033[1;32m\xE2\x9C\x93 passed:\033[0m $1";
          fi


script:
  - mkdir build
  - cd build
  - BUILD_TYPE=Release
  - |
    if [[ "$MYCC" == *mingw* ]] ; then
      ADD_OPTS="-DCMAKE_TOOLCHAIN_FILE=$TRAVIS_BUILD_DIR/Toolchain-cross-mingw-linux.cmake"
    else
      ADD_OPTS="-DCMAKE_C_COMPILER=$MYCC -DCMAKE_CXX_COMPILER=$MYCXX"
    fi
  - |
    if [[ -n "$ENABLE_ASAN" ]] ; then
      ADD_OPTS="$ADD_OPTS -DENABLE_ASAN=$ENABLE_ASAN"
      BUILD_TYPE=Debug
    fi
  - |
    if [[ -n "$ENABLE_UBSAN" ]] ; then
      ADD_OPTS="$ADD_OPTS -DENABLE_UBSAN=$ENABLE_UBSAN"
      BUILD_TYPE=Debug
    fi
  - |
    if [[ -n "$CODE_COVERAGE" ]] ; then
      ADD_OPTS="$ADD_OPTS -DENABLE_COVERAGE=$CODE_COVERAGE"
      BUILD_TYPE=Debug
    fi
  - ADD_OPTS="$ADD_OPTS -DCMAKE_BUILD_TYPE=$BUILD_TYPE"
  - cmake $ADD_OPTS ..
  - make
  - if [[ "$MYCC" != *mingw* ]] ; then make runtest; fi
  - |
    if [[ -n "$CODE_COVERAGE" ]] ; then
      lcov -d . -c -o coverage.info                      # parse coverage data
      lcov -r coverage.info "/usr*" -o coverage.info     # remove data for system headers
      lcov -l coverage.info                              # just list a short summary of the results
      bash <(curl -s https://codecov.io/bash)
    fi
